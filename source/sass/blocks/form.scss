@use "../variables" as v;
@use "../mixins" as m;

.form {
  position: relative;
  z-index: 1;
  background-color: v.$color-deep-sky-blue;
  color: v.$color-default-white;
}

.form::before {
  content: "";
  position: absolute;
  z-index: -1;
  background-image: url("data:image/svg+xml, %3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'%3E%3Cpolygon points='0 0, 100 0, 0 100' fill='%2523041827' fill-opacity='0.5'/%3E%3C/svg%3E%0A");
  background-repeat: no-repeat;
  width: 100%;
  height: 100%;

  @include m.vp-1023 {
    opacity: 0;
  }
}

.form__container {
  display: flex;
  justify-content: space-between;
  margin: 0 auto;
  max-width: 1310px;
  padding: 170px 2.6% 250px;
  gap: 6.25%;

  @include m.vp-1023 {
    justify-content: center;
    padding: 50px 50px 125px;
  }

  @include m.vp-767 {
    padding: 50px 25px 90px;
  }
}

.form__img-wrapper {
  padding-top: 76px;
}

.form__container h2 {
  font-family: v.$ff-title;
  font-weight: 400;
  font-size: 36px;
  line-height: 51px;
  margin: 0;

  @include m.vp-767 {
    font-size: 30px;
    line-height: 42px;
  }
}

.form__container p {
  font-family: v.$ff-text;
  font-size: 16px;
  line-height: 22px;
  margin: 15px 0 0;

  @include m.vp-1023 {
    margin-top: 10px;
  }

  @include m.vp-767 {
    font-size: 14px;
    line-height: 19px;
    margin-top: 20px;
  }
}

.form__container form {
  min-width: 580px;

  @include m.vp-767 {
    min-width: unset;
  }
}

.form__inputs-wrapper {
  display: grid;
  grid-template-columns: repeat(2, minmax(10px, 1fr));
  gap: 30px 20px;
  padding: 35px 0;

  @include m.vp-1023 {
    padding-top: 25px;
  }

  @include m.vp-767 {
    grid-template-columns: minmax(10px, 1fr);
    padding: 35px 0 30px;
  }
}

.form__inputs-wrapper input,
.form__inputs-wrapper textarea {
  background-color: rgba(4, 20, 39, 0.15);
  border: 2px solid transparent;
  border-radius: 3px;
  padding: 15px;
  font-family: v.$ff-text;
  font-size: 16px;
  line-height: 22px;
  color: v.$color-default-white;
  width: 100%;
  transition: border v.$trans-default;
}

.form__inputs-wrapper input:hover,
.form__inputs-wrapper textarea:hover {
  border: 2px solid v.$color-alice-blue;
}

.form__inputs-wrapper textarea {
  padding: 25px 15px;
  min-height: 155px;
}

.form__input-wide {
  grid-column: span 2;

  @include m.vp-767 {
    grid-column: span 1;
  }
}

.form__inputs-wrapper input::placeholder,
.form__inputs-wrapper textarea::placeholder {
  font-family: v.$ff-text;
  font-size: 16px;
  line-height: 22px;
  color: v.$color-default-white;
}

.form__submit-wrapper {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;

  @include m.vp-767 {
    flex-direction: column;
    gap: 25px;
  }
}

.form__btn {
  background-color: v.$color-black-pearl;
  border-radius: 3px;
  font-family: v.$ff-title;
  font-size: 16px;
  line-height: 19px;
  letter-spacing: 0.05em;
  font-weight: 700;
  padding: 16px 25px 14px;
  min-width: 265px;
  display: flex;
  justify-content: center;
  align-self: center;

  @include m.vp-767 {
    min-width: 270px;
  }
}

.checkbox--form {
  max-width: 260px;
}

.checkbox {
  display: flex;
  align-self: center;
  align-items: center;
  gap: 10px;
  cursor: pointer;
}

.checkbox__input {
  appearance: none;
  position: relative;
  min-width: 15px;
  height: 15px;
  border: 1px solid v.$color-default-white;
  border-radius: 2px;
  cursor: inherit;
  transition: opacity v.$trans-default;
}

.checkbox__input::before {
  position: absolute;
  border-top: 1px solid v.$color-default-white;
  border-right: 1px solid v.$color-default-white;
  width: 6px;
  height: 4px;
  transform: rotate(135deg);
  left: 3px;
  top: 3px;
}

.checkbox .checkbox__input:checked::before {
  content: "";
}

.checkbox:hover input,
.checkbox:hover span {
  opacity: 0.6;
}

.checkbox__text {
  font-family: v.$ff-text;
  font-size: 14px;
  line-height: 16px;
  opacity: 0.8;
  transition: opacity v.$trans-default;
}

// Валидация

.is-invalid > input[type="text"],
.is-invalid > input[type="tel"] {
  border-color: v.$color-default-red;
}

.is-invalid > span {
  color: v.$color-default-red;
}
